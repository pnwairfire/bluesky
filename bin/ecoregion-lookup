#!/usr/bin/env python3

import argparse
import logging
import sys

try:
    from bluesky.locationutils import LatLng
    from bluesky.ecoregion.lookup import EcoregionLookup
except:
    import os
    root_dir = os.path.abspath(os.path.join(sys.path[0], '../'))
    sys.path.insert(0, root_dir)
    from bluesky.locationutils import LatLng
    from bluesky.ecoregion.lookup import EcoregionLookup


EXAMPLES_STRING = """
Examples:

    {script} --lat 45.5 --lng -118.2

 """.format(script=sys.argv[0])
def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('--lat', help="latitude", type=float, required=True)
    parser.add_argument('--lng', help="longitude", type=float, required=True)
    parser.add_argument('--implementation', default='ogr',
        help="look up implementation; default 'ogr'")
    parser.add_argument('--try-nearby', action="store_true",
        help="try nearby locations if specified lat,lng fails")
    parser.add_argument('--log-level', default='INFO', help="Log level")

    parser.epilog = EXAMPLES_STRING
    parser.formatter_class = argparse.RawTextHelpFormatter
    return parser.parse_args()

if __name__ == '__main__':
    args = parse_args()

    logging.basicConfig(format='%(asctime)s [%(levelname)s]:%(message)s',
        level=getattr(logging, args.log_level))

    ecoregion_lookup = EcoregionLookup(implementation=args.implementation,
        try_nearby=args.try_nearby)
    print(f"Ecoregion: {ecoregion_lookup.lookup(args.lat, args.lng)}")
