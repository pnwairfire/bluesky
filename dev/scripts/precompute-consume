#!/usr/bin/env python

import argparse
import logging
import os
import sys

root_dir = os.path.abspath(os.path.join(sys.path[0], '../../'))
sys.path.insert(0, root_dir)

from bluesky.consumption.consume.precomputed import precompute


##
## Args
##

EXAMPLES_STRING = """
Examples:

    {script}

 """.format(script=sys.argv[0])

def parse_args():
    parser = argparse.ArgumentParser()
    # parser.add_argument('--indented-output', default=False,
    #     action="store_true", help="produce indented output")
    parser.add_argument('--log-level', default="INFO", help="Log level")
    parser.add_argument('-f', '--fire-type', action="store_true",
        help=f"Only create precomputed data files for one fire type."
              " Options: '{', '.join(FIRE_TYPES)}'")
    parser.add_argument('-b', '--burn-type', action="store_true",
        help=f"Only create precomputed data files for one burn type."
              " Options: '{', '.join(BURN_TYPES)}'")
    parser.add_argument('-e', '--ecoregion', action="store_true",
        help=f"Only create precomputed data files for one fire ecoregion."
              " Options: '{', '.join(ECOREGIONS)}'")
    parser.add_argument('-s', '--season', action="store_true",
        help=f"Only create precomputed data files for one fire season."
              " Options: '{', '.join(SEASONS)}'")

    parser.epilog = EXAMPLES_STRING
    parser.formatter_class = argparse.RawTextHelpFormatter

    args = parser.parse_args()

    logging.basicConfig(level=getattr(logging, args.log_level),
        format='%(asctime)s %(levelname)s: %(message)s')

    logging.info(" Args:")
    for k,v in args.__dict__.items():
        logging.info("   %s: %s", k, v)

    return args


##
## Main
##

def main():
    args = parse_args()

    precompute(args)

if __name__ == "__main__":
    main()
